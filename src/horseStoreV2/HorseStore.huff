/* Import */
include "../../lib/huffmate/src/data-structures/Hashmap.huff"


/* HorseStore Interface */
#define function mintHorse() nonpayable returns()
#define function feedHorse(uint256) nonpayable returns()
#define function isHappyHorse(uint256) view returns(bool)
#define function horseIdToFedTimeStamp(uint256) view returns(uint256)
#define function HORSE_HAPPY_IF_FED_WITHIN() view returns(uint256)

// Storage Slot
#define constant HORSE_FED_TIMESTAMP_LOCATION = FREE_STORAGE_POINTER() // storage slot for the mapping


#define macro GET_HORSE_FED_TIMESTAMP() = takes(0) returns(0) {
    0x04 calldataload                   // [horseId]
    [HORSE_FED_TIMESTAMP_LOCATION]      // [HORSE_FED_TIMESTAMP_LOCATION, horseId]
    LOAD_ELEMENT_FROM_KEYS(0x00)        // [horseFedTimestamp]

    0x00 mstore                         // stack : [] memory : {0x00: horseFedTimestamp}
    0x20 0x00 return                    // [] 

} 

// 0xfunc_selector uint256
#define macro FEED_HORSE() = takes(0) returns(0) {
    timestamp                           // [timestamp]
    0x04 calldataload                   // [horseId, timestamp]
    // sstore the timestamp with the horseId key
    [HORSE_FED_TIMESTAMP_LOCATION]      // [HORSE_FED_TIMESTAMP_LOCATION, horseId, timestamp]
    STORE_ELEMENT_FROM_KEYS(0x00)       // []
    stop
}

#define maro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr // [function selector]

    // mintHorse()
    dup1 __FUNC_SIG(mintHorse) eq mintHorse jumpi
    // feedHorse()
    dup1 __FUNC_SIG(feedHorse) eq feedHorse jumpi
    // isHappyHorse()
    dup1 __FUNC_SIG(isHappyHorse) eq isHappyHorse jumpi
    // horseIdToFedTimeStamp(uint256 horseId)
    dup1 __FUNC_SIG(horseIdToFedTimeStamp) eq horseIdToFedTimeStamp jumpi
    // HORSE_HAPPY_IF_FED_WITHIN() 
    dup1 __FUNC_SIG(HORSE_HAPPY_IF_FED_WITHIN) eq horseHappyFedWithin jumpi

    0x00 0x00 revert

    mintHorse:
        MINT_HORSE()
    feedHorse:
        FEED_HORSE()
    isHappyHorse:
        IS_HAPPY_HORSE()
    horseIdToFedTimeStamp:
        GET_HORSE_FED_TIMESTAMP()
    horseHappyFedWithin:
        HORSE_HAPPY_IF_FED_WITHIN()
}